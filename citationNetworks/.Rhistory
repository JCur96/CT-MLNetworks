# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
return(outputDf)
}
partData <- IDLinkedRefDf[85:90,]
matchedDf <- matchTitles(partData, matchedDf)
# no idea why it doesnt like this one? # matchTable <- data.frame(Citing_ID=as.numeric(), Cited_ID=as.numeric(), Citing_Title=as.character(), Cited_Title=as.character(), BestMatch=as.character, Similarity=as.numeric())# not sure if that will work
matchedDf <- data.frame(CitingID=as.numeric(), CitedID=as.numeric(), CitingTitle=as.character(), CitedTitle=as.character(), BestMatch=as.character(), Similarity=as.numeric())
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
#print(match)
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- NA
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
partData <- IDLinkedRefDf[85:90,]
matchedDf <- matchTitles(partData, fullData, matchedDf)
# no idea why it doesnt like this one? # matchTable <- data.frame(Citing_ID=as.numeric(), Cited_ID=as.numeric(), Citing_Title=as.character(), Cited_Title=as.character(), BestMatch=as.character, Similarity=as.numeric())# not sure if that will work
matchedDf <- data.frame(CitingID=as.numeric(), CitedID=as.numeric(), CitingTitle=as.character(), CitedTitle=as.character(), BestMatch=as.character(), Similarity=as.numeric())
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
#print(match)
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
partData <- IDLinkedRefDf[1:1000,]
matchedDf <- matchTitles(partData, fullData, matchedDf)
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
#print(match)
if (match =< 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
partData <- IDLinkedRefDf[1:1000,]
matchedDf <- matchTitles(partData, fullData, matchedDf)
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(class(match))
if (match =< 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(class(match))
if (match =< 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(class(match))
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
partData <- IDLinkedRefDf[1:1000,]
matchedDf <- matchTitles(partData, fullData, matchedDf)
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
return(outputDf)
}
matchedDf <- matchTitles(partData, fullData, matchedDf)
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
}
return(outputDf)
}
matchedDf <- matchTitles(partData, fullData, matchedDf)
match <- 1-unlist(lapply(match, min, na.rm=TRUE))
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
match <- 1-unlist(lapply(match, min, na.rm=TRUE))
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
match <- 1-unlist(lapply(match, min, na.rm=TRUE))
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
}
return(outputDf)
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
match <- 1-unlist(lapply(match, min, na.rm=TRUE))
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
}
return(outputDf)
}
# no idea why it doesnt like this one? # matchTable <- data.frame(Citing_ID=as.numeric(), Cited_ID=as.numeric(), Citing_Title=as.character(), Cited_Title=as.character(), BestMatch=as.character, Similarity=as.numeric())# not sure if that will work
matchedDf <- data.frame(CitingID=as.numeric(), CitedID=as.numeric(), CitingTitle=as.character(), CitedTitle=as.character(), BestMatch=as.character(), Similarity=as.numeric())
matchTitles <- function(refDf, fullDataDf, outputDf) {
for (i in 1:nrow(fullDataDf)) {
articleTitle <- fullDataDf$title[i]
for (j in 1:nrow(refDf)) {
refTitle <- refDf$ref_title[j]
CitingID <- refDf$ID[j]
match <- synthesisr::fuzzdist(a=tm::removePunctuation(tolower(articleTitle)), b=tm::removePunctuation(tolower(refTitle)))
bestMatch <- refTitle[unlist(lapply(match, which.min))] # don't think this is working
print(match)
match <- 1-unlist(lapply(match, min, na.rm=TRUE))
if (!is.na(match)) {
if (match <= 0.5) { # should actually be match <= 0.5
#bestMatch <- refTitle[unlist(lapply(match, which.min))]
#matchTable <- rbind(matchTable, match)
#print(class(match))
#print(bestMatch)
# x <- 1-unlist(lapply(match, min, na.rm=TRUE))
#x <- 1-unlist(lapply(match, max, na.rm=TRUE))
#print(x)
#print(match)
#print(class(bestMatch))
CitedID <- fullDataDf$ID
# itemList <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
itemRow <- data.frame(CitingID, CitedID, articleTitle, refTitle, bestMatch, match)
# itemRow <- as.data.frame(itemList)
colnames(itemRow) <- c("CitingID", "CitedID", "CitingTitle", "CitedTitle", "BestMatch", "Similarity")
#print(colnames(itemRow))
outputDf <- rbind(outputDf, itemRow)
#print(outputDf[i])
}
}
}
}
return(outputDf)
}
############## Actual work from here on ##############
set.seed(1)
setwd("C:/docNonNetwork/RProjects/CT-MLNetworks/citationNetworks/Code")
# read data in
MLData <- read.csv("../Data/ML/autoScreenedML.csv")
CTData <- read.csv("../Data/CT/autoScreenedCT.csv")
MLData$search <- 1
CTData$search <- 0
MLData$label <- "ML"
CTData$label <- "CT"
MLData$color <- "gold"
CTData$color <- "blue"
fullData <- merge(MLData, CTData, all = T)
head(fullData$references, 4)
names(fullData)[names(fullData) == "X"] <- "ID"
colnames(fullData)
fullData$ID <- 1:nrow(fullData)
refs <- fullData[c("ID", "references", "title")]
IDLinkedRefDf <- read.csv("../Data/expandedRefsWithOriginPaperID.csv")
IDLinkedRefDf$ref_title <- NA
refSplitter <- function(df) {
df <- df[!(is.na(df$Reference) | df$Reference==""), ]
for (i in 1:nrow(df)) {
splitRefList <- strsplit(df$Reference[i],"(\\.,)(?!.*\1)", perl=TRUE)
#print(splitRefList)
for (sublistIter in 1:length(splitRefList[[1]])) {
#print(sublistIter)
#print(length(splitRefList[[1]]))
if (length(splitRefList[[1]]) > 0) {
if (grepl("(\\([0-9]*\\))(?!.*\1)" ,splitRefList[[1]][sublistIter], perl=TRUE) == T) {
# print(splitRefList[[1]][sublistIter]) # it works, I am lord of all regex
titlePlusDate <- splitRefList[[1]][sublistIter]
# justTitle <- strsplit(titlePlusDate, "(\\([0-9]*\\))(?!.*\1)", perl=TRUE)
# print(justTitle) # not sure if this will really cut it, too variable.
# additionally, might get away with the added extra bits in a check_recall?
df$ref_title[i] <- titlePlusDate
#print(titlePlusDate)
}
}
if (length(splitRefList[[1]]) == 0) {
#print(splitRefList[i])
print(df$Reference[i])
}
}
}
return(df)
}
IDLinkedRefDf <- refSplitter(IDLinkedRefDf)
write.csv(IDLinkedRefDf, "../Data/SplitRefs.csv")
matchedTable <- litsearchr::check_recall(fullData$title, IDLinkedRefDf$ref_title)
matchedTableDf <- as.data.frame(matchedTable)
write.csv(matchedTableDf, "../Data/matchedTableDf.csv")
View(matchTitles)
set.seed(1)
setwd("C:/docNonNetwork/RProjects/CT-MLNetworks/citationNetworks/Code")
# read data in
MLData <- read.csv("../Data/ML/autoScreenedML.csv")
CTData <- read.csv("../Data/CT/autoScreenedCT.csv")
MLData$search <- 1
CTData$search <- 0
MLData$label <- "ML"
CTData$label <- "CT"
MLData$color <- "gold"
CTData$color <- "blue"
fullData <- merge(MLData, CTData, all = T)
head(fullData$references, 4)
names(fullData)[names(fullData) == "X"] <- "ID"
colnames(fullData)
fullData$ID <- 1:nrow(fullData)
refs <- fullData[c("ID", "references", "title")]
View(refs)
cleanTitles <- refs[c("ID", "title")]
write.csv(cleanTitles, "../Data/cleanTitles.csv")
